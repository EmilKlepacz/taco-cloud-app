spring:
  datasource:
    # By default, the database name is randomly generated.
    # But that we want to have jdbc url like this for h2 connection:
    # jdbc:h2:mem:tacocloud
    url: jdbc:h2:mem:tacocloud
    username: sa  # Default username for H2
    password:     # Default password for H2 (leave empty for no password)
  sql:
    init:
      # Ensures schema.sql always runs
      # when schema.sql is changed please: mvn clean install; and then:
      # ./mvnw spring-boot:run
      mode: always
  jpa:
    properties:
      hibernate:
        # Format SQL queries for readability
        format_sql: true
  thymeleaf:
    cache: false
  security:
    oauth2:
      client:
        registration:
          github:
            client-id: ${GITHUB_CLIENT_ID}         # store this in env variable for security purposes
            client-secret: ${GITHUB_CLIENT_SECRET} # store this in env variable for security purposes
            scope: user:email
      resourceserver:
        jwt:
          jwk-set-uri: ${JWK_SET_URI} # store this in env variable for security purposes
  data:
    rest:
      base-path: /data-api # for Spring Data REST automatically generated endpoints based on repositories
  h2:
    console:
      enabled: true
      path: /h2-console
      settings:
        web-allow-others: true # this one is for visibility of the console from docker...
logging:
  level:
    org.hibernate.SQL: debug
    org.hibernate.orm.jdbc.bind: trace
    org.springframework.security: debug
    org.springframework.web: debug
# custom configuration properties:
taco:
  orders:
    pageSize: 5 # set page size here!